syntax = "proto3";

package examples.load_with_runtime;

import "discovery/v1/client.proto";
import "discovery/v1/discovery.proto";
import "logger/v1/logger.proto"; // Import the logger proto
import "transport/v1/client.proto";
import "transport/v1/server.proto";

option go_package = "./load_with_runtime/conf;conf";

// Bootstrap is the top-level configuration for a rich example application,
// composed of existing framework API protos.
message Bootstrap {
  // Server configurations (e.g., HTTP, gRPC servers)
  repeated transport.v1.Server servers = 1;

  // Downstream client configurations
  map<string, ClientConfig> clients = 2;

  // Logging configuration
  logger.v1.Logger logger = 3; // Use the existing logger proto

  // Registries configuration, including service discoveries
  RegistriesConfig registries = 4;
}

// ClientConfig combines all configurations needed for a client
message ClientConfig {
  discovery.v1.Client discovery = 1;
  transport.v1.Client transport = 2;
}

// RegistriesConfig holds various registry-related configurations.
message RegistriesConfig {
  // Service discovery configurations
  map<string, discovery.v1.Discovery> discoveries = 1;
}
