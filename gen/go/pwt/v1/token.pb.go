// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: pwt/v1/token.proto

package pwtv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/google/gnostic/openapiv3"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PWT is a web token that can be used to authenticate a user with protobuf services.
type Token struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId     string  `protobuf:"bytes,8,opt,name=client_id,proto3" json:"client_id,omitempty"`
	ClientSecret string  `protobuf:"bytes,9,opt,name=client_secret,proto3" json:"client_secret,omitempty"`
	Token        string  `protobuf:"bytes,10,opt,name=token,proto3" json:"token,omitempty"`
	Claims       *Claims `protobuf:"bytes,11,opt,name=claims,proto3" json:"claims,omitempty"` // Claims
}

func (x *Token) Reset() {
	*x = Token{}
	mi := &file_pwt_v1_token_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_pwt_v1_token_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_pwt_v1_token_proto_rawDescGZIP(), []int{0}
}

func (x *Token) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *Token) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *Token) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *Token) GetClaims() *Claims {
	if x != nil {
		return x.Claims
	}
	return nil
}

type Claims struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sub   string                 `protobuf:"bytes,1,opt,name=sub,proto3" json:"sub,omitempty"`     // Subject
	Iss   string                 `protobuf:"bytes,2,opt,name=iss,proto3" json:"iss,omitempty"`     // Issuer
	Aud   string                 `protobuf:"bytes,3,opt,name=aud,proto3" json:"aud,omitempty"`     // Audience
	Exp   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=exp,proto3" json:"exp,omitempty"`     // Expiration Time
	Nbf   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=nbf,proto3" json:"nbf,omitempty"`     // Not Before
	Iat   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=iat,proto3" json:"iat,omitempty"`     // Issued At
	Jti   string                 `protobuf:"bytes,7,opt,name=jti,proto3" json:"jti,omitempty"`     // JWT ID
	Roles []string               `protobuf:"bytes,8,rep,name=roles,proto3" json:"roles,omitempty"` // Custom roles
}

func (x *Claims) Reset() {
	*x = Claims{}
	mi := &file_pwt_v1_token_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Claims) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Claims) ProtoMessage() {}

func (x *Claims) ProtoReflect() protoreflect.Message {
	mi := &file_pwt_v1_token_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Claims.ProtoReflect.Descriptor instead.
func (*Claims) Descriptor() ([]byte, []int) {
	return file_pwt_v1_token_proto_rawDescGZIP(), []int{1}
}

func (x *Claims) GetSub() string {
	if x != nil {
		return x.Sub
	}
	return ""
}

func (x *Claims) GetIss() string {
	if x != nil {
		return x.Iss
	}
	return ""
}

func (x *Claims) GetAud() string {
	if x != nil {
		return x.Aud
	}
	return ""
}

func (x *Claims) GetExp() *timestamppb.Timestamp {
	if x != nil {
		return x.Exp
	}
	return nil
}

func (x *Claims) GetNbf() *timestamppb.Timestamp {
	if x != nil {
		return x.Nbf
	}
	return nil
}

func (x *Claims) GetIat() *timestamppb.Timestamp {
	if x != nil {
		return x.Iat
	}
	return nil
}

func (x *Claims) GetJti() string {
	if x != nil {
		return x.Jti
	}
	return ""
}

func (x *Claims) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

var File_pwt_v1_token_proto protoreflect.FileDescriptor

var file_pwt_v1_token_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x77, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x77, 0x74, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x2f,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x33, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xcb, 0x02, 0x0a,
	0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x4c, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2e, 0xba, 0x47, 0x2b, 0x92, 0x02,
	0x28, 0x54, 0x68, 0x65, 0x20, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x49, 0x44, 0x20, 0x61,
	0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x12, 0x58, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x32, 0xba, 0x47, 0x2f,
	0x92, 0x02, 0x2c, 0x54, 0x68, 0x65, 0x20, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x20, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x20,
	0x77, 0x69, 0x74, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x52,
	0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x49,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x33, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0xba, 0x47, 0x29, 0x92, 0x02, 0x26, 0x54, 0x68, 0x65, 0x20,
	0x77, 0x65, 0x62, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x75, 0x73, 0x65, 0x64, 0x20, 0x66,
	0x6f, 0x72, 0x20, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x4f, 0x0a, 0x06, 0x63, 0x6c, 0x61,
	0x69, 0x6d, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x77, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x42, 0x27, 0xba, 0x47, 0x24, 0x92, 0x02,
	0x21, 0x54, 0x68, 0x65, 0x20, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x20, 0x65, 0x6d, 0x62, 0x65,
	0x64, 0x64, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x2e, 0x52, 0x06, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x22, 0xf6, 0x04, 0x0a, 0x06, 0x43,
	0x6c, 0x61, 0x69, 0x6d, 0x73, 0x12, 0x38, 0x0a, 0x03, 0x73, 0x75, 0x62, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x26, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0xba, 0x47, 0x1c, 0x92, 0x02,
	0x19, 0x54, 0x68, 0x65, 0x20, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x20, 0x6f, 0x66, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x52, 0x03, 0x73, 0x75, 0x62, 0x12,
	0x37, 0x0a, 0x03, 0x69, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x25, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0xba, 0x47, 0x1b, 0x92, 0x02, 0x18, 0x54, 0x68, 0x65, 0x20, 0x69,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x2e, 0x52, 0x03, 0x69, 0x73, 0x73, 0x12, 0x4c, 0x0a, 0x03, 0x61, 0x75, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3a, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0xba, 0x47,
	0x30, 0x92, 0x02, 0x2d, 0x54, 0x68, 0x65, 0x20, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65,
	0x20, 0x66, 0x6f, 0x72, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x69, 0x73, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64,
	0x2e, 0x52, 0x03, 0x61, 0x75, 0x64, 0x12, 0x55, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42,
	0x27, 0xba, 0x47, 0x24, 0x92, 0x02, 0x21, 0x54, 0x68, 0x65, 0x20, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x52, 0x03, 0x65, 0x78, 0x70, 0x12, 0x69, 0x0a,
	0x03, 0x6e, 0x62, 0x66, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x3b, 0xba, 0x47, 0x38, 0x92, 0x02, 0x35, 0x54, 0x68,
	0x65, 0x20, 0x74, 0x69, 0x6d, 0x65, 0x20, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x20, 0x77, 0x68,
	0x69, 0x63, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x6d, 0x75,
	0x73, 0x74, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x62, 0x65, 0x20, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x65, 0x64, 0x2e, 0x52, 0x03, 0x6e, 0x62, 0x66, 0x12, 0x5b, 0x0a, 0x03, 0x69, 0x61, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x42, 0x2d, 0xba, 0x47, 0x2a, 0x92, 0x02, 0x27, 0x54, 0x68, 0x65, 0x20, 0x74, 0x69, 0x6d,
	0x65, 0x20, 0x61, 0x74, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x77, 0x61, 0x73, 0x20, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x2e,
	0x52, 0x03, 0x69, 0x61, 0x74, 0x12, 0x43, 0x0a, 0x03, 0x6a, 0x74, 0x69, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x31, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0xba, 0x47, 0x27, 0x92, 0x02,
	0x24, 0x54, 0x68, 0x65, 0x20, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x20, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x52, 0x03, 0x6a, 0x74, 0x69, 0x12, 0x47, 0x0a, 0x05, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x42, 0x31, 0xba, 0x47, 0x2e, 0x92, 0x02,
	0x2b, 0x54, 0x68, 0x65, 0x20, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x20, 0x72, 0x6f, 0x6c, 0x65,
	0x73, 0x20, 0x61, 0x73, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x74, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74,
	0x68, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x52, 0x05, 0x72, 0x6f,
	0x6c, 0x65, 0x73, 0x42, 0x86, 0x01, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x77, 0x74, 0x2e,
	0x76, 0x31, 0x42, 0x0a, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x72, 0x69,
	0x67, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x77, 0x74, 0x2f, 0x76, 0x31, 0x3b, 0x70, 0x77, 0x74,
	0x76, 0x31, 0xf8, 0x01, 0x01, 0xa2, 0x02, 0x03, 0x50, 0x58, 0x58, 0xaa, 0x02, 0x06, 0x50, 0x77,
	0x74, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x06, 0x50, 0x77, 0x74, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x12,
	0x50, 0x77, 0x74, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x07, 0x50, 0x77, 0x74, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pwt_v1_token_proto_rawDescOnce sync.Once
	file_pwt_v1_token_proto_rawDescData = file_pwt_v1_token_proto_rawDesc
)

func file_pwt_v1_token_proto_rawDescGZIP() []byte {
	file_pwt_v1_token_proto_rawDescOnce.Do(func() {
		file_pwt_v1_token_proto_rawDescData = protoimpl.X.CompressGZIP(file_pwt_v1_token_proto_rawDescData)
	})
	return file_pwt_v1_token_proto_rawDescData
}

var file_pwt_v1_token_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pwt_v1_token_proto_goTypes = []any{
	(*Token)(nil),                 // 0: pwt.v1.Token
	(*Claims)(nil),                // 1: pwt.v1.Claims
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
}
var file_pwt_v1_token_proto_depIdxs = []int32{
	1, // 0: pwt.v1.Token.claims:type_name -> pwt.v1.Claims
	2, // 1: pwt.v1.Claims.exp:type_name -> google.protobuf.Timestamp
	2, // 2: pwt.v1.Claims.nbf:type_name -> google.protobuf.Timestamp
	2, // 3: pwt.v1.Claims.iat:type_name -> google.protobuf.Timestamp
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_pwt_v1_token_proto_init() }
func file_pwt_v1_token_proto_init() {
	if File_pwt_v1_token_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pwt_v1_token_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pwt_v1_token_proto_goTypes,
		DependencyIndexes: file_pwt_v1_token_proto_depIdxs,
		MessageInfos:      file_pwt_v1_token_proto_msgTypes,
	}.Build()
	File_pwt_v1_token_proto = out.File
	file_pwt_v1_token_proto_rawDesc = nil
	file_pwt_v1_token_proto_goTypes = nil
	file_pwt_v1_token_proto_depIdxs = nil
}
