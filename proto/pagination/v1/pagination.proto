syntax = "proto3";

package pagination.v1;

import "google/protobuf/any.proto";
import "google/protobuf/field_mask.proto";
import "gnostic/openapi/v3/annotations.proto";

option cc_enable_arenas = true;
option go_package = "github.com/origadmin/runtime/gen/go/pagination/v1;paginationv1";
option java_multiple_files = true;
option java_outer_classname = "PaginationProto";
option java_package = "com.github.origadmin.runtime.pagination";
option objc_class_prefix = "Pagination";

// PageRequest common request
message PageRequest {
  // current page number
  optional int32 current = 1 [
    json_name = "current",
    (gnostic.openapi.v3.property) = {
      description: "current page number ",
      default: {number: 1}
    }
  ];
  // The number of lines per page
  optional int32 page_size = 2 [
    json_name = "page_size",
    (gnostic.openapi.v3.property) = {
      description: "The number of lines per page",
      default: {number: 15}
    }
  ];
  // The page_token is the query parameter for set the page token.
  string page_token = 3 [
    json_name = "page_token",
    (gnostic.openapi.v3.property) = {
      description: "paging token"
    }
  ];
  // The only_count is the query parameter for set only to query the total number
  bool only_count = 4 [
    json_name = "only_count",
    (gnostic.openapi.v3.property) = {
      description: "query total only"
    }
  ];
  // The no_paging is used to disable pagination.
  optional bool no_paging = 5 [
    json_name = "no_paging",
    (gnostic.openapi.v3.property) = {
      description: "whether not paging"
    }
  ];
  // sort condition
  repeated string order_by = 6 [
    json_name = "order_by",
    (gnostic.openapi.v3.property) = {
      description: "sort condition, field name followed by 'asc' (ascending) or 'desc' (descending)",
      example: {yaml: "{\"val1\", \"-val2\"}"}
    }
  ];
  // Field mask
  google.protobuf.FieldMask field_mask = 7 [
    json_name = "field_mask",
    (gnostic.openapi.v3.property) = {
      description: "Field mask, if empty, select all fields.",
      example: {yaml : "id,name,age"}
    }
  ];
}

// PageResponse general result
message PageResponse {
  bool success = 1 [
    json_name = "success",
    (gnostic.openapi.v3.property) = {
      description: "success"
    }
  ];
  // The total number of items in the list.
  int32 total = 2 [
    json_name = "total",
    (gnostic.openapi.v3.property) = {
      description: "total number"
    }
  ];
  // The paging data
  google.protobuf.Any data = 3 [
    json_name = "data",
    (gnostic.openapi.v3.property) = {
      description: "data"
    }
  ];
  // The current page number.
  optional int32 current = 4 [
    json_name = "current",
    (gnostic.openapi.v3.property) = {
      description: "current page number"
    }
  ];
  // The maximum number of items to return.
  optional int32 page_size = 5 [
    json_name = "page_size",
    (gnostic.openapi.v3.property) = {
      description: "maximum number of items to return"
    }
  ];
  // Token to retrieve the next page of results, or empty if there are no
  // more results in the list.
  string next_page_token = 6 [
    json_name = "next_page_token",
    (gnostic.openapi.v3.property) = {
      description: "token to retrieve the next page of results, or empty if there are no more results in the list"
    }
  ];
  // Additional information about this response.
  // content to be added without destroying the current data format
  google.protobuf.Any extra = 7 [
    json_name = "extra",
    (gnostic.openapi.v3.property) = {
      description: "additional information about this response"
    }
  ];

}
