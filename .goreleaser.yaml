# .goreleaser.yaml
# Configure GoReleaser for the entire monorepo

project_name: framework # The name of your monorepo project

builds:
  - id: runtime
    dir: ./runtime # Path to the runtime module
    main: . # Main package within the runtime module
    binary: runtime # Output binary name
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64

  - id: toolkits
    dir: ./toolkits # Path to the toolkits module
    main: .
    binary: toolkits
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64

  - id: contrib
    dir: ./contrib # Path to the contrib module (if it produces binaries)
    main: .
    binary: contrib
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64

  - id: origen
    dir: ./tools/origen # Path to the origen module
    main: .
    binary: origen
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64

# You can add more configurations for archives, checksums, signs, etc.
# For example, to create GitHub releases:
releases:
  - name_template: "{{ .ProjectName }} {{ .Version }}"
    draft: true # Set to false for automatic release
    prerelease: auto
    # You can add more assets to the release here, e.g., documentation, checksums
    # For example:
    # artifacts:
    #   - glob: "./dist/*.zip" # Example: include all zip archives from the dist folder

checksum:
  name_template: 'checksums.txt'

snapshot:
  name_template: "{{ .Tag }}-next"

changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'

# For more details, refer to GoReleaser documentation: https://goreleaser.com/
