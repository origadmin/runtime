// Code generated by adptool. DO NOT EDIT.
//
// This file is generated from kratos.go.

// Package errors contains generated code by adptool.
package errors

import (
	kerrors "github.com/go-kratos/kratos/v2/errors"
)

const (
	SupportPackageIsVersion1 = kerrors.SupportPackageIsVersion1
	UnknownCode              = kerrors.UnknownCode
	UnknownReason            = kerrors.UnknownReason
)

var (
	E_Code                   = kerrors.E_Code
	E_DefaultCode            = kerrors.E_DefaultCode
	File_errors_errors_proto = kerrors.File_errors_errors_proto
)

type (
	Error  = kerrors.Error
	Status = kerrors.Status
)

func As(err error, target any) bool {
	return kerrors.As(err, target)
}

func BadRequest(reason, message string) *kerrors.Error {
	return kerrors.BadRequest(reason, message)
}

func ClientClosed(reason, message string) *kerrors.Error {
	return kerrors.ClientClosed(reason, message)
}

func Clone(err *kerrors.Error) *kerrors.Error {
	return kerrors.Clone(err)
}

func Code(err error) int {
	return kerrors.Code(err)
}

func Conflict(reason, message string) *kerrors.Error {
	return kerrors.Conflict(reason, message)
}

func Errorf(code int, reason, format string, a ...any) error {
	return kerrors.Errorf(code, reason, format, a...)
}

func Forbidden(reason, message string) *kerrors.Error {
	return kerrors.Forbidden(reason, message)
}

func FromError(err error) *kerrors.Error {
	return kerrors.FromError(err)
}

func GatewayTimeout(reason, message string) *kerrors.Error {
	return kerrors.GatewayTimeout(reason, message)
}

func InternalServer(reason, message string) *kerrors.Error {
	return kerrors.InternalServer(reason, message)
}

func Is(err, target error) bool {
	return kerrors.Is(err, target)
}

func IsBadRequest(err error) bool {
	return kerrors.IsBadRequest(err)
}

func IsClientClosed(err error) bool {
	return kerrors.IsClientClosed(err)
}

func IsConflict(err error) bool {
	return kerrors.IsConflict(err)
}

func IsForbidden(err error) bool {
	return kerrors.IsForbidden(err)
}

func IsGatewayTimeout(err error) bool {
	return kerrors.IsGatewayTimeout(err)
}

func IsInternalServer(err error) bool {
	return kerrors.IsInternalServer(err)
}

func IsNotFound(err error) bool {
	return kerrors.IsNotFound(err)
}

func IsServiceUnavailable(err error) bool {
	return kerrors.IsServiceUnavailable(err)
}

func IsUnauthorized(err error) bool {
	return kerrors.IsUnauthorized(err)
}

func New(code int, reason, message string) *kerrors.Error {
	return kerrors.New(code, reason, message)
}

func Newf(code int, reason, format string, a ...any) *kerrors.Error {
	return kerrors.Newf(code, reason, format, a...)
}

func NotFound(reason, message string) *kerrors.Error {
	return kerrors.NotFound(reason, message)
}

func Reason(err error) string {
	return kerrors.Reason(err)
}

func ServiceUnavailable(reason, message string) *kerrors.Error {
	return kerrors.ServiceUnavailable(reason, message)
}

func Unauthorized(reason, message string) *kerrors.Error {
	return kerrors.Unauthorized(reason, message)
}

func Unwrap(err error) error {
	return kerrors.Unwrap(err)
}
