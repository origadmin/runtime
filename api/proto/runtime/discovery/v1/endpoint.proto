syntax = "proto3";

package runtime.discovery.v1;

import "runtime/discovery/v1/discovery.proto";
import "google/protobuf/duration.proto";
import "runtime/middleware/v1/middleware.proto";

option go_package = "github.com/origadmin/runtime/api/gen/go/runtime/discovery/v1;discoveryv1";

//
// DEPRECATED: This file is deprecated and will be removed in a future version.
// The concepts of Endpoint and Selector have been merged into the ClientConfig
// messages within `transport/v1/transport.proto` for better cohesion and clarity.
//
// - Use `GrpcClientConfig.discovery_filter` or `HttpClientConfig.discovery_filter`
//   instead of `Selector`.
// - Use `GrpcClientConfig.endpoint` or `HttpClientConfig.endpoint`
//   instead of `Endpoint.uri`.
//

// Endpoint holds the complete, resolved configuration for a client-side service endpoint.
message Endpoint {
  option deprecated = true;

  // The name is the name of the service key in the endpoint.
  string name = 1;

  // The discovery_name is the name of the service key in the discovery service.
  string discovery_name = 2 [json_name = "discovery_name"];

  // The endpoint URI to resolve, e.g., "discovery:///user-service".
  string uri = 3;

  // Selector for client-side load balancing and node filtering.
  Selector selector = 4;
}

// Selector defines the client-side node selection strategy.
message Selector {
  option deprecated = true;

  // The type of selector to use, e.g., "random", "wrr", "p2c".
  string type = 1;
  // version is used for version-based routing.
  string version = 2;
}
