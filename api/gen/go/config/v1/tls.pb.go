// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: config/v1/tls.proto

package configv1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// TLS configuration for secure connections
type TLSConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether TLS is enabled
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Certificate configuration
	//
	// Types that are valid to be assigned to Config:
	//
	//	*TLSConfig_File
	//	*TLSConfig_Pem
	Config isTLSConfig_Config `protobuf_oneof:"config"`
	// Minimum TLS version
	// Allowed values: "1.0", "1.1", "1.2", "1.3"
	// Default: "1.2"
	MinVersion string `protobuf:"bytes,4,opt,name=min_version,proto3" json:"min_version,omitempty"`
	// List of supported cipher suites
	// Example: ["TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"]
	CipherSuites []string `protobuf:"bytes,5,rep,name=cipher_suites,proto3" json:"cipher_suites,omitempty"`
	// Require client certificate
	// Default: false
	RequireClientCert bool `protobuf:"varint,6,opt,name=require_client_cert,proto3" json:"require_client_cert,omitempty"`
	// Client CA certificate file path (for client cert validation)
	ClientCaFile  string `protobuf:"bytes,7,opt,name=client_ca_file,proto3" json:"client_ca_file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TLSConfig) Reset() {
	*x = TLSConfig{}
	mi := &file_config_v1_tls_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TLSConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TLSConfig) ProtoMessage() {}

func (x *TLSConfig) ProtoReflect() protoreflect.Message {
	mi := &file_config_v1_tls_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TLSConfig.ProtoReflect.Descriptor instead.
func (*TLSConfig) Descriptor() ([]byte, []int) {
	return file_config_v1_tls_proto_rawDescGZIP(), []int{0}
}

func (x *TLSConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *TLSConfig) GetConfig() isTLSConfig_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *TLSConfig) GetFile() *FileConfig {
	if x != nil {
		if x, ok := x.Config.(*TLSConfig_File); ok {
			return x.File
		}
	}
	return nil
}

func (x *TLSConfig) GetPem() *PEMConfig {
	if x != nil {
		if x, ok := x.Config.(*TLSConfig_Pem); ok {
			return x.Pem
		}
	}
	return nil
}

func (x *TLSConfig) GetMinVersion() string {
	if x != nil {
		return x.MinVersion
	}
	return ""
}

func (x *TLSConfig) GetCipherSuites() []string {
	if x != nil {
		return x.CipherSuites
	}
	return nil
}

func (x *TLSConfig) GetRequireClientCert() bool {
	if x != nil {
		return x.RequireClientCert
	}
	return false
}

func (x *TLSConfig) GetClientCaFile() string {
	if x != nil {
		return x.ClientCaFile
	}
	return ""
}

type isTLSConfig_Config interface {
	isTLSConfig_Config()
}

type TLSConfig_File struct {
	// File-based certificate configuration
	File *FileConfig `protobuf:"bytes,2,opt,name=file,proto3,oneof"`
}

type TLSConfig_Pem struct {
	// Inline PEM certificate data
	Pem *PEMConfig `protobuf:"bytes,3,opt,name=pem,proto3,oneof"`
}

func (*TLSConfig_File) isTLSConfig_Config() {}

func (*TLSConfig_Pem) isTLSConfig_Config() {}

// File-based certificate configuration
type FileConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Path to certificate file
	Cert string `protobuf:"bytes,1,opt,name=cert,proto3" json:"cert,omitempty"`
	// Path to private key file
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Path to CA certificate file (optional)
	Ca            string `protobuf:"bytes,3,opt,name=ca,proto3" json:"ca,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileConfig) Reset() {
	*x = FileConfig{}
	mi := &file_config_v1_tls_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileConfig) ProtoMessage() {}

func (x *FileConfig) ProtoReflect() protoreflect.Message {
	mi := &file_config_v1_tls_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileConfig.ProtoReflect.Descriptor instead.
func (*FileConfig) Descriptor() ([]byte, []int) {
	return file_config_v1_tls_proto_rawDescGZIP(), []int{1}
}

func (x *FileConfig) GetCert() string {
	if x != nil {
		return x.Cert
	}
	return ""
}

func (x *FileConfig) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *FileConfig) GetCa() string {
	if x != nil {
		return x.Ca
	}
	return ""
}

// Inline PEM certificate configuration
type PEMConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Certificate data in PEM format
	Cert []byte `protobuf:"bytes,1,opt,name=cert,proto3" json:"cert,omitempty"`
	// Private key data in PEM format
	Key []byte `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// CA certificate data in PEM format (optional)
	Ca            []byte `protobuf:"bytes,3,opt,name=ca,proto3" json:"ca,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PEMConfig) Reset() {
	*x = PEMConfig{}
	mi := &file_config_v1_tls_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PEMConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PEMConfig) ProtoMessage() {}

func (x *PEMConfig) ProtoReflect() protoreflect.Message {
	mi := &file_config_v1_tls_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PEMConfig.ProtoReflect.Descriptor instead.
func (*PEMConfig) Descriptor() ([]byte, []int) {
	return file_config_v1_tls_proto_rawDescGZIP(), []int{2}
}

func (x *PEMConfig) GetCert() []byte {
	if x != nil {
		return x.Cert
	}
	return nil
}

func (x *PEMConfig) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *PEMConfig) GetCa() []byte {
	if x != nil {
		return x.Ca
	}
	return nil
}

var File_config_v1_tls_proto protoreflect.FileDescriptor

const file_config_v1_tls_proto_rawDesc = "" +
	"\n" +
	"\x13config/v1/tls.proto\x12\tconfig.v1\x1a\x17validate/validate.proto\"\xc3\x02\n" +
	"\tTLSConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12+\n" +
	"\x04file\x18\x02 \x01(\v2\x15.config.v1.FileConfigH\x00R\x04file\x12(\n" +
	"\x03pem\x18\x03 \x01(\v2\x14.config.v1.PEMConfigH\x00R\x03pem\x12;\n" +
	"\vmin_version\x18\x04 \x01(\tB\x19\xfaB\x16r\x14R\x031.0R\x031.1R\x031.2R\x031.3R\vmin_version\x12$\n" +
	"\rcipher_suites\x18\x05 \x03(\tR\rcipher_suites\x120\n" +
	"\x13require_client_cert\x18\x06 \x01(\bR\x13require_client_cert\x12&\n" +
	"\x0eclient_ca_file\x18\a \x01(\tR\x0eclient_ca_fileB\b\n" +
	"\x06config\"T\n" +
	"\n" +
	"FileConfig\x12\x1b\n" +
	"\x04cert\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x04cert\x12\x19\n" +
	"\x03key\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x03key\x12\x0e\n" +
	"\x02ca\x18\x03 \x01(\tR\x02ca\"S\n" +
	"\tPEMConfig\x12\x1b\n" +
	"\x04cert\x18\x01 \x01(\fB\a\xfaB\x04z\x02\x10\x01R\x04cert\x12\x19\n" +
	"\x03key\x18\x02 \x01(\fB\a\xfaB\x04z\x02\x10\x01R\x03key\x12\x0e\n" +
	"\x02ca\x18\x03 \x01(\fR\x02caB\x9d\x01\n" +
	"\rcom.config.v1B\bTlsProtoP\x01Z:github.com/origadmin/runtime/api/gen/go/config/v1;configv1\xf8\x01\x01\xa2\x02\x03CXX\xaa\x02\tConfig.V1\xca\x02\tConfig\\V1\xe2\x02\x15Config\\V1\\GPBMetadata\xea\x02\n" +
	"Config::V1b\x06proto3"

var (
	file_config_v1_tls_proto_rawDescOnce sync.Once
	file_config_v1_tls_proto_rawDescData []byte
)

func file_config_v1_tls_proto_rawDescGZIP() []byte {
	file_config_v1_tls_proto_rawDescOnce.Do(func() {
		file_config_v1_tls_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_config_v1_tls_proto_rawDesc), len(file_config_v1_tls_proto_rawDesc)))
	})
	return file_config_v1_tls_proto_rawDescData
}

var file_config_v1_tls_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_config_v1_tls_proto_goTypes = []any{
	(*TLSConfig)(nil),  // 0: config.v1.TLSConfig
	(*FileConfig)(nil), // 1: config.v1.FileConfig
	(*PEMConfig)(nil),  // 2: config.v1.PEMConfig
}
var file_config_v1_tls_proto_depIdxs = []int32{
	1, // 0: config.v1.TLSConfig.file:type_name -> config.v1.FileConfig
	2, // 1: config.v1.TLSConfig.pem:type_name -> config.v1.PEMConfig
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_config_v1_tls_proto_init() }
func file_config_v1_tls_proto_init() {
	if File_config_v1_tls_proto != nil {
		return
	}
	file_config_v1_tls_proto_msgTypes[0].OneofWrappers = []any{
		(*TLSConfig_File)(nil),
		(*TLSConfig_Pem)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_config_v1_tls_proto_rawDesc), len(file_config_v1_tls_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_v1_tls_proto_goTypes,
		DependencyIndexes: file_config_v1_tls_proto_depIdxs,
		MessageInfos:      file_config_v1_tls_proto_msgTypes,
	}.Build()
	File_config_v1_tls_proto = out.File
	file_config_v1_tls_proto_goTypes = nil
	file_config_v1_tls_proto_depIdxs = nil
}
