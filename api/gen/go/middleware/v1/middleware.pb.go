// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: middleware/v1/middleware.proto

package middlewarev1

import (
	v1 "github.com/origadmin/runtime/api/gen/go/extension/v1"
	circuitbreaker "github.com/origadmin/runtime/api/gen/go/middleware/v1/circuitbreaker"
	cors "github.com/origadmin/runtime/api/gen/go/middleware/v1/cors"
	jwt "github.com/origadmin/runtime/api/gen/go/middleware/v1/jwt"
	metrics "github.com/origadmin/runtime/api/gen/go/middleware/v1/metrics"
	ratelimit "github.com/origadmin/runtime/api/gen/go/middleware/v1/ratelimit"
	selector "github.com/origadmin/runtime/api/gen/go/middleware/v1/selector"
	validator "github.com/origadmin/runtime/api/gen/go/middleware/v1/validator"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Metadata configuration for the middleware.
type Metadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Prefixes      []string               `protobuf:"bytes,2,rep,name=prefixes,proto3" json:"prefixes,omitempty"`
	Data          map[string]string      `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	mi := &file_middleware_v1_middleware_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_middleware_v1_middleware_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_middleware_v1_middleware_proto_rawDescGZIP(), []int{0}
}

func (x *Metadata) GetPrefixes() []string {
	if x != nil {
		return x.Prefixes
	}
	return nil
}

func (x *Metadata) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type Logging struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Logging) Reset() {
	*x = Logging{}
	mi := &file_middleware_v1_middleware_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Logging) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logging) ProtoMessage() {}

func (x *Logging) ProtoReflect() protoreflect.Message {
	mi := &file_middleware_v1_middleware_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logging.ProtoReflect.Descriptor instead.
func (*Logging) Descriptor() ([]byte, []int) {
	return file_middleware_v1_middleware_proto_rawDescGZIP(), []int{1}
}

// MiddlewareConfig represents a single middleware configuration with an enable switch.
type MiddlewareConfig struct {
	state          protoimpl.MessageState         `protogen:"open.v1"`
	Enabled        bool                           `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Name           string                         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type           string                         `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	RateLimiter    *ratelimit.RateLimiter         `protobuf:"bytes,4,opt,name=rate_limiter,proto3,oneof" json:"rate_limiter,omitempty"`
	Metrics        *metrics.Metrics               `protobuf:"bytes,5,opt,name=metrics,proto3,oneof" json:"metrics,omitempty"`
	Validator      *validator.Validator           `protobuf:"bytes,6,opt,name=validator,proto3,oneof" json:"validator,omitempty"`
	Jwt            *jwt.JWT                       `protobuf:"bytes,7,opt,name=jwt,proto3,oneof" json:"jwt,omitempty"`
	Selector       *selector.Selector             `protobuf:"bytes,8,opt,name=selector,proto3,oneof" json:"selector,omitempty"`
	Cors           *cors.Cors                     `protobuf:"bytes,9,opt,name=cors,proto3,oneof" json:"cors,omitempty"`
	CircuitBreaker *circuitbreaker.CircuitBreaker `protobuf:"bytes,10,opt,name=circuit_breaker,proto3,oneof" json:"circuit_breaker,omitempty"`
	Logging        *Logging                       `protobuf:"bytes,11,opt,name=logging,proto3,oneof" json:"logging,omitempty"`
	Metadata       *Metadata                      `protobuf:"bytes,12,opt,name=metadata,proto3,oneof" json:"metadata,omitempty"`
	// Using Extension.Config for custom middlewares, moved to last
	Customize     *v1.Extension_Config `protobuf:"bytes,100,opt,name=customize,proto3,oneof" json:"customize,omitempty"` // Add other specific middleware types here as they are defined
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MiddlewareConfig) Reset() {
	*x = MiddlewareConfig{}
	mi := &file_middleware_v1_middleware_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiddlewareConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiddlewareConfig) ProtoMessage() {}

func (x *MiddlewareConfig) ProtoReflect() protoreflect.Message {
	mi := &file_middleware_v1_middleware_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiddlewareConfig.ProtoReflect.Descriptor instead.
func (*MiddlewareConfig) Descriptor() ([]byte, []int) {
	return file_middleware_v1_middleware_proto_rawDescGZIP(), []int{2}
}

func (x *MiddlewareConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *MiddlewareConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MiddlewareConfig) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MiddlewareConfig) GetRateLimiter() *ratelimit.RateLimiter {
	if x != nil {
		return x.RateLimiter
	}
	return nil
}

func (x *MiddlewareConfig) GetMetrics() *metrics.Metrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *MiddlewareConfig) GetValidator() *validator.Validator {
	if x != nil {
		return x.Validator
	}
	return nil
}

func (x *MiddlewareConfig) GetJwt() *jwt.JWT {
	if x != nil {
		return x.Jwt
	}
	return nil
}

func (x *MiddlewareConfig) GetSelector() *selector.Selector {
	if x != nil {
		return x.Selector
	}
	return nil
}

func (x *MiddlewareConfig) GetCors() *cors.Cors {
	if x != nil {
		return x.Cors
	}
	return nil
}

func (x *MiddlewareConfig) GetCircuitBreaker() *circuitbreaker.CircuitBreaker {
	if x != nil {
		return x.CircuitBreaker
	}
	return nil
}

func (x *MiddlewareConfig) GetLogging() *Logging {
	if x != nil {
		return x.Logging
	}
	return nil
}

func (x *MiddlewareConfig) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *MiddlewareConfig) GetCustomize() *v1.Extension_Config {
	if x != nil {
		return x.Customize
	}
	return nil
}

// Middlewares is used to configure a chain of middlewares for an entry point.
type Middlewares struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of middleware configurations to be applied in order.
	Middlewares   []*MiddlewareConfig `protobuf:"bytes,1,rep,name=middlewares,proto3" json:"middlewares,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Middlewares) Reset() {
	*x = Middlewares{}
	mi := &file_middleware_v1_middleware_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Middlewares) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Middlewares) ProtoMessage() {}

func (x *Middlewares) ProtoReflect() protoreflect.Message {
	mi := &file_middleware_v1_middleware_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Middlewares.ProtoReflect.Descriptor instead.
func (*Middlewares) Descriptor() ([]byte, []int) {
	return file_middleware_v1_middleware_proto_rawDescGZIP(), []int{3}
}

func (x *Middlewares) GetMiddlewares() []*MiddlewareConfig {
	if x != nil {
		return x.Middlewares
	}
	return nil
}

var File_middleware_v1_middleware_proto protoreflect.FileDescriptor

const file_middleware_v1_middleware_proto_rawDesc = "" +
	"\n" +
	"\x1emiddleware/v1/middleware.proto\x12\rmiddleware.v1\x1a\x1cextension/v1/extension.proto\x1a1middleware/v1/circuitbreaker/circuitbreaker.proto\x1a\x1dmiddleware/v1/cors/cors.proto\x1a\x1bmiddleware/v1/jwt/jwt.proto\x1a#middleware/v1/metrics/metrics.proto\x1a)middleware/v1/ratelimit/ratelimiter.proto\x1a%middleware/v1/selector/selector.proto\x1a'middleware/v1/validator/validator.proto\"\x96\x01\n" +
	"\bMetadata\x12\x1a\n" +
	"\bprefixes\x18\x02 \x03(\tR\bprefixes\x125\n" +
	"\x04data\x18\x03 \x03(\v2!.middleware.v1.Metadata.DataEntryR\x04data\x1a7\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\t\n" +
	"\aLogging\"\xe3\x06\n" +
	"\x10MiddlewareConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12M\n" +
	"\frate_limiter\x18\x04 \x01(\v2$.middleware.v1.ratelimit.RateLimiterH\x00R\frate_limiter\x88\x01\x01\x12=\n" +
	"\ametrics\x18\x05 \x01(\v2\x1e.middleware.v1.metrics.MetricsH\x01R\ametrics\x88\x01\x01\x12E\n" +
	"\tvalidator\x18\x06 \x01(\v2\".middleware.v1.validator.ValidatorH\x02R\tvalidator\x88\x01\x01\x12-\n" +
	"\x03jwt\x18\a \x01(\v2\x16.middleware.v1.jwt.JWTH\x03R\x03jwt\x88\x01\x01\x12A\n" +
	"\bselector\x18\b \x01(\v2 .middleware.v1.selector.SelectorH\x04R\bselector\x88\x01\x01\x121\n" +
	"\x04cors\x18\t \x01(\v2\x18.middleware.v1.cors.CorsH\x05R\x04cors\x88\x01\x01\x12[\n" +
	"\x0fcircuit_breaker\x18\n" +
	" \x01(\v2,.middleware.v1.circuitbreaker.CircuitBreakerH\x06R\x0fcircuit_breaker\x88\x01\x01\x125\n" +
	"\alogging\x18\v \x01(\v2\x16.middleware.v1.LoggingH\aR\alogging\x88\x01\x01\x128\n" +
	"\bmetadata\x18\f \x01(\v2\x17.middleware.v1.MetadataH\bR\bmetadata\x88\x01\x01\x12A\n" +
	"\tcustomize\x18d \x01(\v2\x1e.extension.v1.Extension.ConfigH\tR\tcustomize\x88\x01\x01B\x0f\n" +
	"\r_rate_limiterB\n" +
	"\n" +
	"\b_metricsB\f\n" +
	"\n" +
	"_validatorB\x06\n" +
	"\x04_jwtB\v\n" +
	"\t_selectorB\a\n" +
	"\x05_corsB\x12\n" +
	"\x10_circuit_breakerB\n" +
	"\n" +
	"\b_loggingB\v\n" +
	"\t_metadataB\f\n" +
	"\n" +
	"_customize\"P\n" +
	"\vMiddlewares\x12A\n" +
	"\vmiddlewares\x18\x01 \x03(\v2\x1f.middleware.v1.MiddlewareConfigR\vmiddlewaresB\xc0\x01\n" +
	"\x11com.middleware.v1B\x0fMiddlewareProtoP\x01ZBgithub.com/origadmin/runtime/api/gen/go/middleware/v1;middlewarev1\xf8\x01\x01\xa2\x02\x03MXX\xaa\x02\rMiddleware.V1\xca\x02\rMiddleware\\V1\xe2\x02\x19Middleware\\V1\\GPBMetadata\xea\x02\x0eMiddleware::V1b\x06proto3"

var (
	file_middleware_v1_middleware_proto_rawDescOnce sync.Once
	file_middleware_v1_middleware_proto_rawDescData []byte
)

func file_middleware_v1_middleware_proto_rawDescGZIP() []byte {
	file_middleware_v1_middleware_proto_rawDescOnce.Do(func() {
		file_middleware_v1_middleware_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_middleware_v1_middleware_proto_rawDesc), len(file_middleware_v1_middleware_proto_rawDesc)))
	})
	return file_middleware_v1_middleware_proto_rawDescData
}

var file_middleware_v1_middleware_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_middleware_v1_middleware_proto_goTypes = []any{
	(*Metadata)(nil),                      // 0: middleware.v1.Metadata
	(*Logging)(nil),                       // 1: middleware.v1.Logging
	(*MiddlewareConfig)(nil),              // 2: middleware.v1.MiddlewareConfig
	(*Middlewares)(nil),                   // 3: middleware.v1.Middlewares
	nil,                                   // 4: middleware.v1.Metadata.DataEntry
	(*ratelimit.RateLimiter)(nil),         // 5: middleware.v1.ratelimit.RateLimiter
	(*metrics.Metrics)(nil),               // 6: middleware.v1.metrics.Metrics
	(*validator.Validator)(nil),           // 7: middleware.v1.validator.Validator
	(*jwt.JWT)(nil),                       // 8: middleware.v1.jwt.JWT
	(*selector.Selector)(nil),             // 9: middleware.v1.selector.Selector
	(*cors.Cors)(nil),                     // 10: middleware.v1.cors.Cors
	(*circuitbreaker.CircuitBreaker)(nil), // 11: middleware.v1.circuitbreaker.CircuitBreaker
	(*v1.Extension_Config)(nil),           // 12: extension.v1.Extension.Config
}
var file_middleware_v1_middleware_proto_depIdxs = []int32{
	4,  // 0: middleware.v1.Metadata.data:type_name -> middleware.v1.Metadata.DataEntry
	5,  // 1: middleware.v1.MiddlewareConfig.rate_limiter:type_name -> middleware.v1.ratelimit.RateLimiter
	6,  // 2: middleware.v1.MiddlewareConfig.metrics:type_name -> middleware.v1.metrics.Metrics
	7,  // 3: middleware.v1.MiddlewareConfig.validator:type_name -> middleware.v1.validator.Validator
	8,  // 4: middleware.v1.MiddlewareConfig.jwt:type_name -> middleware.v1.jwt.JWT
	9,  // 5: middleware.v1.MiddlewareConfig.selector:type_name -> middleware.v1.selector.Selector
	10, // 6: middleware.v1.MiddlewareConfig.cors:type_name -> middleware.v1.cors.Cors
	11, // 7: middleware.v1.MiddlewareConfig.circuit_breaker:type_name -> middleware.v1.circuitbreaker.CircuitBreaker
	1,  // 8: middleware.v1.MiddlewareConfig.logging:type_name -> middleware.v1.Logging
	0,  // 9: middleware.v1.MiddlewareConfig.metadata:type_name -> middleware.v1.Metadata
	12, // 10: middleware.v1.MiddlewareConfig.customize:type_name -> extension.v1.Extension.Config
	2,  // 11: middleware.v1.Middlewares.middlewares:type_name -> middleware.v1.MiddlewareConfig
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_middleware_v1_middleware_proto_init() }
func file_middleware_v1_middleware_proto_init() {
	if File_middleware_v1_middleware_proto != nil {
		return
	}
	file_middleware_v1_middleware_proto_msgTypes[2].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_middleware_v1_middleware_proto_rawDesc), len(file_middleware_v1_middleware_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_middleware_v1_middleware_proto_goTypes,
		DependencyIndexes: file_middleware_v1_middleware_proto_depIdxs,
		MessageInfos:      file_middleware_v1_middleware_proto_msgTypes,
	}.Build()
	File_middleware_v1_middleware_proto = out.File
	file_middleware_v1_middleware_proto_goTypes = nil
	file_middleware_v1_middleware_proto_depIdxs = nil
}
