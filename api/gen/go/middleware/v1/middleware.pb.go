// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: middleware/v1/middleware.proto

package middlewarev1

import (
	v1 "github.com/origadmin/runtime/api/gen/go/extension/v1"
	circuitbreaker "github.com/origadmin/runtime/api/gen/go/middleware/v1/circuitbreaker"
	cors "github.com/origadmin/runtime/api/gen/go/middleware/v1/cors"
	jwt "github.com/origadmin/runtime/api/gen/go/middleware/v1/jwt"
	metrics "github.com/origadmin/runtime/api/gen/go/middleware/v1/metrics"
	ratelimit "github.com/origadmin/runtime/api/gen/go/middleware/v1/ratelimit"
	selector "github.com/origadmin/runtime/api/gen/go/middleware/v1/selector"
	validator "github.com/origadmin/runtime/api/gen/go/middleware/v1/validator"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MiddlewareConfig represents a single middleware configuration with an enable switch.
type MiddlewareConfig struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Enabled bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// Types that are valid to be assigned to Middleware:
	//
	//	*MiddlewareConfig_RateLimiter
	//	*MiddlewareConfig_Metrics
	//	*MiddlewareConfig_Validator
	//	*MiddlewareConfig_Jwt
	//	*MiddlewareConfig_Selector
	//	*MiddlewareConfig_Cors
	//	*MiddlewareConfig_CircuitBreaker
	//	*MiddlewareConfig_Custom
	Middleware    isMiddlewareConfig_Middleware `protobuf_oneof:"middleware"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MiddlewareConfig) Reset() {
	*x = MiddlewareConfig{}
	mi := &file_middleware_v1_middleware_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MiddlewareConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiddlewareConfig) ProtoMessage() {}

func (x *MiddlewareConfig) ProtoReflect() protoreflect.Message {
	mi := &file_middleware_v1_middleware_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiddlewareConfig.ProtoReflect.Descriptor instead.
func (*MiddlewareConfig) Descriptor() ([]byte, []int) {
	return file_middleware_v1_middleware_proto_rawDescGZIP(), []int{0}
}

func (x *MiddlewareConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *MiddlewareConfig) GetMiddleware() isMiddlewareConfig_Middleware {
	if x != nil {
		return x.Middleware
	}
	return nil
}

func (x *MiddlewareConfig) GetRateLimiter() *ratelimit.RateLimiter {
	if x != nil {
		if x, ok := x.Middleware.(*MiddlewareConfig_RateLimiter); ok {
			return x.RateLimiter
		}
	}
	return nil
}

func (x *MiddlewareConfig) GetMetrics() *metrics.Metrics {
	if x != nil {
		if x, ok := x.Middleware.(*MiddlewareConfig_Metrics); ok {
			return x.Metrics
		}
	}
	return nil
}

func (x *MiddlewareConfig) GetValidator() *validator.Validator {
	if x != nil {
		if x, ok := x.Middleware.(*MiddlewareConfig_Validator); ok {
			return x.Validator
		}
	}
	return nil
}

func (x *MiddlewareConfig) GetJwt() *jwt.JWT {
	if x != nil {
		if x, ok := x.Middleware.(*MiddlewareConfig_Jwt); ok {
			return x.Jwt
		}
	}
	return nil
}

func (x *MiddlewareConfig) GetSelector() *selector.Selector {
	if x != nil {
		if x, ok := x.Middleware.(*MiddlewareConfig_Selector); ok {
			return x.Selector
		}
	}
	return nil
}

func (x *MiddlewareConfig) GetCors() *cors.Cors {
	if x != nil {
		if x, ok := x.Middleware.(*MiddlewareConfig_Cors); ok {
			return x.Cors
		}
	}
	return nil
}

func (x *MiddlewareConfig) GetCircuitBreaker() *circuitbreaker.CircuitBreaker {
	if x != nil {
		if x, ok := x.Middleware.(*MiddlewareConfig_CircuitBreaker); ok {
			return x.CircuitBreaker
		}
	}
	return nil
}

func (x *MiddlewareConfig) GetCustom() *v1.Extension_Config {
	if x != nil {
		if x, ok := x.Middleware.(*MiddlewareConfig_Custom); ok {
			return x.Custom
		}
	}
	return nil
}

type isMiddlewareConfig_Middleware interface {
	isMiddlewareConfig_Middleware()
}

type MiddlewareConfig_RateLimiter struct {
	RateLimiter *ratelimit.RateLimiter `protobuf:"bytes,2,opt,name=rate_limiter,json=rateLimiter,proto3,oneof"`
}

type MiddlewareConfig_Metrics struct {
	Metrics *metrics.Metrics `protobuf:"bytes,3,opt,name=metrics,proto3,oneof"`
}

type MiddlewareConfig_Validator struct {
	Validator *validator.Validator `protobuf:"bytes,4,opt,name=validator,proto3,oneof"`
}

type MiddlewareConfig_Jwt struct {
	Jwt *jwt.JWT `protobuf:"bytes,5,opt,name=jwt,proto3,oneof"`
}

type MiddlewareConfig_Selector struct {
	Selector *selector.Selector `protobuf:"bytes,6,opt,name=selector,proto3,oneof"`
}

type MiddlewareConfig_Cors struct {
	Cors *cors.Cors `protobuf:"bytes,7,opt,name=cors,proto3,oneof"`
}

type MiddlewareConfig_CircuitBreaker struct {
	CircuitBreaker *circuitbreaker.CircuitBreaker `protobuf:"bytes,8,opt,name=circuit_breaker,json=circuitBreaker,proto3,oneof"`
}

type MiddlewareConfig_Custom struct {
	Custom *v1.Extension_Config `protobuf:"bytes,100,opt,name=custom,proto3,oneof"` // Using Extension.Config for custom middlewares, moved to last
}

func (*MiddlewareConfig_RateLimiter) isMiddlewareConfig_Middleware() {}

func (*MiddlewareConfig_Metrics) isMiddlewareConfig_Middleware() {}

func (*MiddlewareConfig_Validator) isMiddlewareConfig_Middleware() {}

func (*MiddlewareConfig_Jwt) isMiddlewareConfig_Middleware() {}

func (*MiddlewareConfig_Selector) isMiddlewareConfig_Middleware() {}

func (*MiddlewareConfig_Cors) isMiddlewareConfig_Middleware() {}

func (*MiddlewareConfig_CircuitBreaker) isMiddlewareConfig_Middleware() {}

func (*MiddlewareConfig_Custom) isMiddlewareConfig_Middleware() {}

// Middlewares is used to configure a chain of middlewares for an entry point.
type Middlewares struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A list of middleware configurations to be applied in order.
	Middlewares   []*MiddlewareConfig `protobuf:"bytes,1,rep,name=middlewares,proto3" json:"middlewares,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Middlewares) Reset() {
	*x = Middlewares{}
	mi := &file_middleware_v1_middleware_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Middlewares) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Middlewares) ProtoMessage() {}

func (x *Middlewares) ProtoReflect() protoreflect.Message {
	mi := &file_middleware_v1_middleware_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Middlewares.ProtoReflect.Descriptor instead.
func (*Middlewares) Descriptor() ([]byte, []int) {
	return file_middleware_v1_middleware_proto_rawDescGZIP(), []int{1}
}

func (x *Middlewares) GetMiddlewares() []*MiddlewareConfig {
	if x != nil {
		return x.Middlewares
	}
	return nil
}

var File_middleware_v1_middleware_proto protoreflect.FileDescriptor

const file_middleware_v1_middleware_proto_rawDesc = "" +
	"\n" +
	"\x1emiddleware/v1/middleware.proto\x12\rmiddleware.v1\x1a\x1cextension/v1/extension.proto\x1a1middleware/v1/circuitbreaker/circuitbreaker.proto\x1a\x1dmiddleware/v1/cors/cors.proto\x1a\x1bmiddleware/v1/jwt/jwt.proto\x1a#middleware/v1/metrics/metrics.proto\x1a)middleware/v1/ratelimit/ratelimiter.proto\x1a%middleware/v1/selector/selector.proto\x1a'middleware/v1/validator/validator.proto\"\xb4\x04\n" +
	"\x10MiddlewareConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12I\n" +
	"\frate_limiter\x18\x02 \x01(\v2$.middleware.v1.ratelimit.RateLimiterH\x00R\vrateLimiter\x12:\n" +
	"\ametrics\x18\x03 \x01(\v2\x1e.middleware.v1.metrics.MetricsH\x00R\ametrics\x12B\n" +
	"\tvalidator\x18\x04 \x01(\v2\".middleware.v1.validator.ValidatorH\x00R\tvalidator\x12*\n" +
	"\x03jwt\x18\x05 \x01(\v2\x16.middleware.v1.jwt.JWTH\x00R\x03jwt\x12>\n" +
	"\bselector\x18\x06 \x01(\v2 .middleware.v1.selector.SelectorH\x00R\bselector\x12.\n" +
	"\x04cors\x18\a \x01(\v2\x18.middleware.v1.cors.CorsH\x00R\x04cors\x12W\n" +
	"\x0fcircuit_breaker\x18\b \x01(\v2,.middleware.v1.circuitbreaker.CircuitBreakerH\x00R\x0ecircuitBreaker\x128\n" +
	"\x06custom\x18d \x01(\v2\x1e.extension.v1.Extension.ConfigH\x00R\x06customB\f\n" +
	"\n" +
	"middleware\"P\n" +
	"\vMiddlewares\x12A\n" +
	"\vmiddlewares\x18\x01 \x03(\v2\x1f.middleware.v1.MiddlewareConfigR\vmiddlewaresB\xc0\x01\n" +
	"\x11com.middleware.v1B\x0fMiddlewareProtoP\x01ZBgithub.com/origadmin/runtime/api/gen/go/middleware/v1;middlewarev1\xf8\x01\x01\xa2\x02\x03MXX\xaa\x02\rMiddleware.V1\xca\x02\rMiddleware\\V1\xe2\x02\x19Middleware\\V1\\GPBMetadata\xea\x02\x0eMiddleware::V1b\x06proto3"

var (
	file_middleware_v1_middleware_proto_rawDescOnce sync.Once
	file_middleware_v1_middleware_proto_rawDescData []byte
)

func file_middleware_v1_middleware_proto_rawDescGZIP() []byte {
	file_middleware_v1_middleware_proto_rawDescOnce.Do(func() {
		file_middleware_v1_middleware_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_middleware_v1_middleware_proto_rawDesc), len(file_middleware_v1_middleware_proto_rawDesc)))
	})
	return file_middleware_v1_middleware_proto_rawDescData
}

var file_middleware_v1_middleware_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_middleware_v1_middleware_proto_goTypes = []any{
	(*MiddlewareConfig)(nil),              // 0: middleware.v1.MiddlewareConfig
	(*Middlewares)(nil),                   // 1: middleware.v1.Middlewares
	(*ratelimit.RateLimiter)(nil),         // 2: middleware.v1.ratelimit.RateLimiter
	(*metrics.Metrics)(nil),               // 3: middleware.v1.metrics.Metrics
	(*validator.Validator)(nil),           // 4: middleware.v1.validator.Validator
	(*jwt.JWT)(nil),                       // 5: middleware.v1.jwt.JWT
	(*selector.Selector)(nil),             // 6: middleware.v1.selector.Selector
	(*cors.Cors)(nil),                     // 7: middleware.v1.cors.Cors
	(*circuitbreaker.CircuitBreaker)(nil), // 8: middleware.v1.circuitbreaker.CircuitBreaker
	(*v1.Extension_Config)(nil),           // 9: extension.v1.Extension.Config
}
var file_middleware_v1_middleware_proto_depIdxs = []int32{
	2, // 0: middleware.v1.MiddlewareConfig.rate_limiter:type_name -> middleware.v1.ratelimit.RateLimiter
	3, // 1: middleware.v1.MiddlewareConfig.metrics:type_name -> middleware.v1.metrics.Metrics
	4, // 2: middleware.v1.MiddlewareConfig.validator:type_name -> middleware.v1.validator.Validator
	5, // 3: middleware.v1.MiddlewareConfig.jwt:type_name -> middleware.v1.jwt.JWT
	6, // 4: middleware.v1.MiddlewareConfig.selector:type_name -> middleware.v1.selector.Selector
	7, // 5: middleware.v1.MiddlewareConfig.cors:type_name -> middleware.v1.cors.Cors
	8, // 6: middleware.v1.MiddlewareConfig.circuit_breaker:type_name -> middleware.v1.circuitbreaker.CircuitBreaker
	9, // 7: middleware.v1.MiddlewareConfig.custom:type_name -> extension.v1.Extension.Config
	0, // 8: middleware.v1.Middlewares.middlewares:type_name -> middleware.v1.MiddlewareConfig
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_middleware_v1_middleware_proto_init() }
func file_middleware_v1_middleware_proto_init() {
	if File_middleware_v1_middleware_proto != nil {
		return
	}
	file_middleware_v1_middleware_proto_msgTypes[0].OneofWrappers = []any{
		(*MiddlewareConfig_RateLimiter)(nil),
		(*MiddlewareConfig_Metrics)(nil),
		(*MiddlewareConfig_Validator)(nil),
		(*MiddlewareConfig_Jwt)(nil),
		(*MiddlewareConfig_Selector)(nil),
		(*MiddlewareConfig_Cors)(nil),
		(*MiddlewareConfig_CircuitBreaker)(nil),
		(*MiddlewareConfig_Custom)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_middleware_v1_middleware_proto_rawDesc), len(file_middleware_v1_middleware_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_middleware_v1_middleware_proto_goTypes,
		DependencyIndexes: file_middleware_v1_middleware_proto_depIdxs,
		MessageInfos:      file_middleware_v1_middleware_proto_msgTypes,
	}.Build()
	File_middleware_v1_middleware_proto = out.File
	file_middleware_v1_middleware_proto_goTypes = nil
	file_middleware_v1_middleware_proto_depIdxs = nil
}
