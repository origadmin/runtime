// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: runtime/transport/v1/http.proto

package transportv1

import (
	cors "github.com/origadmin/runtime/api/gen/go/runtime/middleware/v1/cors"
	v1 "github.com/origadmin/runtime/api/gen/go/runtime/security/transport/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// HttpServerConfig defines the core configuration for a Kratos HTTP server.
type HttpServerConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// addr is the address for the server to listen on.
	// e.g., "0.0.0.0:8000"
	Addr string `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	// timeout is the request handling timeout.
	Timeout *durationpb.Duration `protobuf:"bytes,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// middlewares is a list of middleware names to be applied to the server.
	// The framework will look up these names in a middleware provider.
	Middlewares []string `protobuf:"bytes,3,rep,name=middlewares,proto3" json:"middlewares,omitempty"`
	// tls_config defines the TLS settings for the HTTP server.
	TlsConfig *v1.TLSConfig `protobuf:"bytes,4,opt,name=tls_config,json=tlsConfig,proto3,oneof" json:"tls_config,omitempty"`
	// network specifies the network type, e.g., "tcp", "tcp4", "tcp6".
	Network string `protobuf:"bytes,5,opt,name=network,proto3" json:"network,omitempty"`
	// cors configuration for the HTTP server
	Cors *cors.Cors `protobuf:"bytes,6,opt,name=cors,proto3,oneof" json:"cors,omitempty"`
	// enable_pprof indicates whether to enable pprof debugging endpoints.
	EnablePprof   bool `protobuf:"varint,7,opt,name=enable_pprof,json=enablePprof,proto3" json:"enable_pprof,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpServerConfig) Reset() {
	*x = HttpServerConfig{}
	mi := &file_runtime_transport_v1_http_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpServerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpServerConfig) ProtoMessage() {}

func (x *HttpServerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_runtime_transport_v1_http_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpServerConfig.ProtoReflect.Descriptor instead.
func (*HttpServerConfig) Descriptor() ([]byte, []int) {
	return file_runtime_transport_v1_http_proto_rawDescGZIP(), []int{0}
}

func (x *HttpServerConfig) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *HttpServerConfig) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *HttpServerConfig) GetMiddlewares() []string {
	if x != nil {
		return x.Middlewares
	}
	return nil
}

func (x *HttpServerConfig) GetTlsConfig() *v1.TLSConfig {
	if x != nil {
		return x.TlsConfig
	}
	return nil
}

func (x *HttpServerConfig) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *HttpServerConfig) GetCors() *cors.Cors {
	if x != nil {
		return x.Cors
	}
	return nil
}

func (x *HttpServerConfig) GetEnablePprof() bool {
	if x != nil {
		return x.EnablePprof
	}
	return false
}

// HttpClientConfig defines the core configuration for creating a Kratos HTTP client.
type HttpClientConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// endpoint is the target to connect to.
	// It can be a direct address or a discovery service URI.
	// e.g., "http://127.0.0.1:8000" or "discovery:///your-service-name"
	Endpoint string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// timeout is the request timeout for a single HTTP call.
	Timeout *durationpb.Duration `protobuf:"bytes,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// middlewares is a list of middleware names to be applied to the client.
	Middlewares []string `protobuf:"bytes,3,rep,name=middlewares,proto3" json:"middlewares,omitempty"`
	// selector defines the node selection strategy for the client.
	Selector *SelectorConfig `protobuf:"bytes,4,opt,name=selector,proto3" json:"selector,omitempty"`
	// discovery_name is the name of the discovery client to use for service discovery.
	// This is used when the endpoint is a discovery service URI.
	DiscoveryName string `protobuf:"bytes,5,opt,name=discovery_name,json=discoveryName,proto3" json:"discovery_name,omitempty"`
	// tls_config defines the TLS settings for the HTTP client.
	TlsConfig *v1.TLSConfig `protobuf:"bytes,6,opt,name=tls_config,json=tlsConfig,proto3,oneof" json:"tls_config,omitempty"`
	// dial_timeout is the timeout for establishing a connection.
	DialTimeout   *durationpb.Duration `protobuf:"bytes,7,opt,name=dial_timeout,json=dialTimeout,proto3,oneof" json:"dial_timeout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpClientConfig) Reset() {
	*x = HttpClientConfig{}
	mi := &file_runtime_transport_v1_http_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpClientConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpClientConfig) ProtoMessage() {}

func (x *HttpClientConfig) ProtoReflect() protoreflect.Message {
	mi := &file_runtime_transport_v1_http_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpClientConfig.ProtoReflect.Descriptor instead.
func (*HttpClientConfig) Descriptor() ([]byte, []int) {
	return file_runtime_transport_v1_http_proto_rawDescGZIP(), []int{1}
}

func (x *HttpClientConfig) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *HttpClientConfig) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *HttpClientConfig) GetMiddlewares() []string {
	if x != nil {
		return x.Middlewares
	}
	return nil
}

func (x *HttpClientConfig) GetSelector() *SelectorConfig {
	if x != nil {
		return x.Selector
	}
	return nil
}

func (x *HttpClientConfig) GetDiscoveryName() string {
	if x != nil {
		return x.DiscoveryName
	}
	return ""
}

func (x *HttpClientConfig) GetTlsConfig() *v1.TLSConfig {
	if x != nil {
		return x.TlsConfig
	}
	return nil
}

func (x *HttpClientConfig) GetDialTimeout() *durationpb.Duration {
	if x != nil {
		return x.DialTimeout
	}
	return nil
}

var File_runtime_transport_v1_http_proto protoreflect.FileDescriptor

const file_runtime_transport_v1_http_proto_rawDesc = "" +
	"\n" +
	"\x1fruntime/transport/v1/http.proto\x12\x14runtime.transport.v1\x1a\x1egoogle/protobuf/duration.proto\x1a%runtime/middleware/v1/cors/cors.proto\x1a'runtime/security/transport/v1/tls.proto\x1a#runtime/transport/v1/selector.proto\"\xdb\x02\n" +
	"\x10HttpServerConfig\x12\x12\n" +
	"\x04addr\x18\x01 \x01(\tR\x04addr\x123\n" +
	"\atimeout\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x12 \n" +
	"\vmiddlewares\x18\x03 \x03(\tR\vmiddlewares\x12L\n" +
	"\n" +
	"tls_config\x18\x04 \x01(\v2(.runtime.security.transport.v1.TLSConfigH\x00R\ttlsConfig\x88\x01\x01\x12\x18\n" +
	"\anetwork\x18\x05 \x01(\tR\anetwork\x129\n" +
	"\x04cors\x18\x06 \x01(\v2 .runtime.middleware.v1.cors.CorsH\x01R\x04cors\x88\x01\x01\x12!\n" +
	"\fenable_pprof\x18\a \x01(\bR\venablePprofB\r\n" +
	"\v_tls_configB\a\n" +
	"\x05_cors\"\x9f\x03\n" +
	"\x10HttpClientConfig\x12\x1a\n" +
	"\bendpoint\x18\x01 \x01(\tR\bendpoint\x123\n" +
	"\atimeout\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\atimeout\x12 \n" +
	"\vmiddlewares\x18\x03 \x03(\tR\vmiddlewares\x12@\n" +
	"\bselector\x18\x04 \x01(\v2$.runtime.transport.v1.SelectorConfigR\bselector\x12%\n" +
	"\x0ediscovery_name\x18\x05 \x01(\tR\rdiscoveryName\x12L\n" +
	"\n" +
	"tls_config\x18\x06 \x01(\v2(.runtime.security.transport.v1.TLSConfigH\x00R\ttlsConfig\x88\x01\x01\x12A\n" +
	"\fdial_timeout\x18\a \x01(\v2\x19.google.protobuf.DurationH\x01R\vdialTimeout\x88\x01\x01B\r\n" +
	"\v_tls_configB\x0f\n" +
	"\r_dial_timeoutB\xe1\x01\n" +
	"\x18com.runtime.transport.v1B\tHttpProtoP\x01ZHgithub.com/origadmin/runtime/api/gen/go/runtime/transport/v1;transportv1\xa2\x02\x03RTX\xaa\x02\x14Runtime.Transport.V1\xca\x02\x14Runtime\\Transport\\V1\xe2\x02 Runtime\\Transport\\V1\\GPBMetadata\xea\x02\x16Runtime::Transport::V1b\x06proto3"

var (
	file_runtime_transport_v1_http_proto_rawDescOnce sync.Once
	file_runtime_transport_v1_http_proto_rawDescData []byte
)

func file_runtime_transport_v1_http_proto_rawDescGZIP() []byte {
	file_runtime_transport_v1_http_proto_rawDescOnce.Do(func() {
		file_runtime_transport_v1_http_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_runtime_transport_v1_http_proto_rawDesc), len(file_runtime_transport_v1_http_proto_rawDesc)))
	})
	return file_runtime_transport_v1_http_proto_rawDescData
}

var file_runtime_transport_v1_http_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_runtime_transport_v1_http_proto_goTypes = []any{
	(*HttpServerConfig)(nil),    // 0: runtime.transport.v1.HttpServerConfig
	(*HttpClientConfig)(nil),    // 1: runtime.transport.v1.HttpClientConfig
	(*durationpb.Duration)(nil), // 2: google.protobuf.Duration
	(*v1.TLSConfig)(nil),        // 3: runtime.security.transport.v1.TLSConfig
	(*cors.Cors)(nil),           // 4: runtime.middleware.v1.cors.Cors
	(*SelectorConfig)(nil),      // 5: runtime.transport.v1.SelectorConfig
}
var file_runtime_transport_v1_http_proto_depIdxs = []int32{
	2, // 0: runtime.transport.v1.HttpServerConfig.timeout:type_name -> google.protobuf.Duration
	3, // 1: runtime.transport.v1.HttpServerConfig.tls_config:type_name -> runtime.security.transport.v1.TLSConfig
	4, // 2: runtime.transport.v1.HttpServerConfig.cors:type_name -> runtime.middleware.v1.cors.Cors
	2, // 3: runtime.transport.v1.HttpClientConfig.timeout:type_name -> google.protobuf.Duration
	5, // 4: runtime.transport.v1.HttpClientConfig.selector:type_name -> runtime.transport.v1.SelectorConfig
	3, // 5: runtime.transport.v1.HttpClientConfig.tls_config:type_name -> runtime.security.transport.v1.TLSConfig
	2, // 6: runtime.transport.v1.HttpClientConfig.dial_timeout:type_name -> google.protobuf.Duration
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_runtime_transport_v1_http_proto_init() }
func file_runtime_transport_v1_http_proto_init() {
	if File_runtime_transport_v1_http_proto != nil {
		return
	}
	file_runtime_transport_v1_selector_proto_init()
	file_runtime_transport_v1_http_proto_msgTypes[0].OneofWrappers = []any{}
	file_runtime_transport_v1_http_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_runtime_transport_v1_http_proto_rawDesc), len(file_runtime_transport_v1_http_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_runtime_transport_v1_http_proto_goTypes,
		DependencyIndexes: file_runtime_transport_v1_http_proto_depIdxs,
		MessageInfos:      file_runtime_transport_v1_http_proto_msgTypes,
	}.Build()
	File_runtime_transport_v1_http_proto = out.File
	file_runtime_transport_v1_http_proto_goTypes = nil
	file_runtime_transport_v1_http_proto_depIdxs = nil
}
