// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: runtime/extension/v1/extension.proto

package extensionv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Extension provides a generic mechanism to add custom configuration sections.
type Extension struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// configs is a map of custom configs with type string
	Configs       []*Extension_Config `protobuf:"bytes,1,rep,name=configs,proto3" json:"configs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Extension) Reset() {
	*x = Extension{}
	mi := &file_runtime_extension_v1_extension_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Extension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Extension) ProtoMessage() {}

func (x *Extension) ProtoReflect() protoreflect.Message {
	mi := &file_runtime_extension_v1_extension_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Extension.ProtoReflect.Descriptor instead.
func (*Extension) Descriptor() ([]byte, []int) {
	return file_runtime_extension_v1_extension_proto_rawDescGZIP(), []int{0}
}

func (x *Extension) GetConfigs() []*Extension_Config {
	if x != nil {
		return x.Configs
	}
	return nil
}

type ExtensionMap struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Types         map[string]*Extension  `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExtensionMap) Reset() {
	*x = ExtensionMap{}
	mi := &file_runtime_extension_v1_extension_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExtensionMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtensionMap) ProtoMessage() {}

func (x *ExtensionMap) ProtoReflect() protoreflect.Message {
	mi := &file_runtime_extension_v1_extension_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtensionMap.ProtoReflect.Descriptor instead.
func (*ExtensionMap) Descriptor() ([]byte, []int) {
	return file_runtime_extension_v1_extension_proto_rawDescGZIP(), []int{1}
}

func (x *ExtensionMap) GetTypes() map[string]*Extension {
	if x != nil {
		return x.Types
	}
	return nil
}

type Extension_Config struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// enabled is used to enable or disable the custom config
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	// name can be any named with registered names
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// value can be any type
	Value         *anypb.Any `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Extension_Config) Reset() {
	*x = Extension_Config{}
	mi := &file_runtime_extension_v1_extension_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Extension_Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Extension_Config) ProtoMessage() {}

func (x *Extension_Config) ProtoReflect() protoreflect.Message {
	mi := &file_runtime_extension_v1_extension_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Extension_Config.ProtoReflect.Descriptor instead.
func (*Extension_Config) Descriptor() ([]byte, []int) {
	return file_runtime_extension_v1_extension_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Extension_Config) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Extension_Config) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Extension_Config) GetValue() *anypb.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_runtime_extension_v1_extension_proto protoreflect.FileDescriptor

const file_runtime_extension_v1_extension_proto_rawDesc = "" +
	"\n" +
	"$runtime/extension/v1/extension.proto\x12\x14runtime.extension.v1\x1a\x19google/protobuf/any.proto\"\xb1\x01\n" +
	"\tExtension\x12@\n" +
	"\aconfigs\x18\x01 \x03(\v2&.runtime.extension.v1.Extension.ConfigR\aconfigs\x1ab\n" +
	"\x06Config\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12*\n" +
	"\x05value\x18\x03 \x01(\v2\x14.google.protobuf.AnyR\x05value\"\xae\x01\n" +
	"\fExtensionMap\x12C\n" +
	"\x05types\x18\x01 \x03(\v2-.runtime.extension.v1.ExtensionMap.TypesEntryR\x05types\x1aY\n" +
	"\n" +
	"TypesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x125\n" +
	"\x05value\x18\x02 \x01(\v2\x1f.runtime.extension.v1.ExtensionR\x05value:\x028\x01B\xe9\x01\n" +
	"\x18com.runtime.extension.v1B\x0eExtensionProtoP\x01ZHgithub.com/origadmin/runtime/api/gen/go/runtime/extension/v1;extensionv1\xf8\x01\x01\xa2\x02\x03REX\xaa\x02\x14Runtime.Extension.V1\xca\x02\x14Runtime\\Extension\\V1\xe2\x02 Runtime\\Extension\\V1\\GPBMetadata\xea\x02\x16Runtime::Extension::V1b\x06proto3"

var (
	file_runtime_extension_v1_extension_proto_rawDescOnce sync.Once
	file_runtime_extension_v1_extension_proto_rawDescData []byte
)

func file_runtime_extension_v1_extension_proto_rawDescGZIP() []byte {
	file_runtime_extension_v1_extension_proto_rawDescOnce.Do(func() {
		file_runtime_extension_v1_extension_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_runtime_extension_v1_extension_proto_rawDesc), len(file_runtime_extension_v1_extension_proto_rawDesc)))
	})
	return file_runtime_extension_v1_extension_proto_rawDescData
}

var file_runtime_extension_v1_extension_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_runtime_extension_v1_extension_proto_goTypes = []any{
	(*Extension)(nil),        // 0: runtime.extension.v1.Extension
	(*ExtensionMap)(nil),     // 1: runtime.extension.v1.ExtensionMap
	(*Extension_Config)(nil), // 2: runtime.extension.v1.Extension.Config
	nil,                      // 3: runtime.extension.v1.ExtensionMap.TypesEntry
	(*anypb.Any)(nil),        // 4: google.protobuf.Any
}
var file_runtime_extension_v1_extension_proto_depIdxs = []int32{
	2, // 0: runtime.extension.v1.Extension.configs:type_name -> runtime.extension.v1.Extension.Config
	3, // 1: runtime.extension.v1.ExtensionMap.types:type_name -> runtime.extension.v1.ExtensionMap.TypesEntry
	4, // 2: runtime.extension.v1.Extension.Config.value:type_name -> google.protobuf.Any
	0, // 3: runtime.extension.v1.ExtensionMap.TypesEntry.value:type_name -> runtime.extension.v1.Extension
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_runtime_extension_v1_extension_proto_init() }
func file_runtime_extension_v1_extension_proto_init() {
	if File_runtime_extension_v1_extension_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_runtime_extension_v1_extension_proto_rawDesc), len(file_runtime_extension_v1_extension_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_runtime_extension_v1_extension_proto_goTypes,
		DependencyIndexes: file_runtime_extension_v1_extension_proto_depIdxs,
		MessageInfos:      file_runtime_extension_v1_extension_proto_msgTypes,
	}.Build()
	File_runtime_extension_v1_extension_proto = out.File
	file_runtime_extension_v1_extension_proto_goTypes = nil
	file_runtime_extension_v1_extension_proto_depIdxs = nil
}
