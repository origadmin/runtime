// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: task/v1/task.proto

package taskv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Task defines the configuration for a background task or cron job service.
type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_task_v1_task_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_task_v1_task_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_task_v1_task_proto_rawDescGZIP(), []int{0}
}

var File_task_v1_task_proto protoreflect.FileDescriptor

const file_task_v1_task_proto_rawDesc = "" +
	"\n" +
	"\x12task/v1/task.proto\x12\atask.v1\"\x06\n" +
	"\x04TaskB\x8d\x01\n" +
	"\vcom.task.v1B\tTaskProtoP\x01Z6github.com/origadmin/runtime/api/gen/go/task/v1;taskv1\xa2\x02\x03TXX\xaa\x02\aTask.V1\xca\x02\aTask\\V1\xe2\x02\x13Task\\V1\\GPBMetadata\xea\x02\bTask::V1b\x06proto3"

var (
	file_task_v1_task_proto_rawDescOnce sync.Once
	file_task_v1_task_proto_rawDescData []byte
)

func file_task_v1_task_proto_rawDescGZIP() []byte {
	file_task_v1_task_proto_rawDescOnce.Do(func() {
		file_task_v1_task_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_task_v1_task_proto_rawDesc), len(file_task_v1_task_proto_rawDesc)))
	})
	return file_task_v1_task_proto_rawDescData
}

var file_task_v1_task_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_task_v1_task_proto_goTypes = []any{
	(*Task)(nil), // 0: task.v1.Task
}
var file_task_v1_task_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_task_v1_task_proto_init() }
func file_task_v1_task_proto_init() {
	if File_task_v1_task_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_task_v1_task_proto_rawDesc), len(file_task_v1_task_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_task_v1_task_proto_goTypes,
		DependencyIndexes: file_task_v1_task_proto_depIdxs,
		MessageInfos:      file_task_v1_task_proto_msgTypes,
	}.Build()
	File_task_v1_task_proto = out.File
	file_task_v1_task_proto_goTypes = nil
	file_task_v1_task_proto_depIdxs = nil
}
