// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: common/v1/pagination.proto

package commonv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PaginationRequest provides a flexible structure for pagination requests, supporting
// both cursor-based (infinite scroll) and offset-based (numbered pages) pagination.
// The server should prioritize `page_token` if both `page_token` and `page` are provided.
type PaginationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// For offset-based pagination: the page number to retrieve (1-indexed).
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	// The maximum number of items to return per page. The server may enforce a
	// maximum limit to this value.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// For cursor-based pagination: a token identifying a page of results the server
	// should return. This is the `next_page_token` from a previous response.
	PageToken string `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// If true, the server will only return the `total_size` in the response Pagination
	// message, and the `items` list will be empty. This is useful for fetching
	// only the total count of items.
	OnlyCount     bool `protobuf:"varint,4,opt,name=only_count,json=onlyCount,proto3" json:"only_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaginationRequest) Reset() {
	*x = PaginationRequest{}
	mi := &file_common_v1_pagination_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaginationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaginationRequest) ProtoMessage() {}

func (x *PaginationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_pagination_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaginationRequest.ProtoReflect.Descriptor instead.
func (*PaginationRequest) Descriptor() ([]byte, []int) {
	return file_common_v1_pagination_proto_rawDescGZIP(), []int{0}
}

func (x *PaginationRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PaginationRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PaginationRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *PaginationRequest) GetOnlyCount() bool {
	if x != nil {
		return x.OnlyCount
	}
	return false
}

// Pagination provides a comprehensive structure for pagination responses, supporting
// both cursor-based (infinite scroll) and offset-based (numbered pages) pagination.
type Pagination struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// For offset-based pagination: the current page number (1-indexed).
	Page int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	// The number of items retrieved on the current page.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// For offset-based pagination: the total number of items available across all pages.
	// This is optional and may be expensive to calculate for large datasets.
	TotalSize int64 `protobuf:"varint,3,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	// For cursor-based pagination: a token to retrieve the next page of results.
	// If empty, there are no more results.
	NextPageToken string `protobuf:"bytes,4,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	mi := &file_common_v1_pagination_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_pagination_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_common_v1_pagination_proto_rawDescGZIP(), []int{1}
}

func (x *Pagination) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Pagination) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *Pagination) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *Pagination) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

var File_common_v1_pagination_proto protoreflect.FileDescriptor

const file_common_v1_pagination_proto_rawDesc = "" +
	"\n" +
	"\x1acommon/v1/pagination.proto\x12\tcommon.v1\"\x82\x01\n" +
	"\x11PaginationRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\x12\x1d\n" +
	"\n" +
	"only_count\x18\x04 \x01(\bR\tonlyCount\"\x84\x01\n" +
	"\n" +
	"Pagination\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"total_size\x18\x03 \x01(\x03R\ttotalSize\x12&\n" +
	"\x0fnext_page_token\x18\x04 \x01(\tR\rnextPageTokenB\xa1\x01\n" +
	"\rcom.common.v1B\x0fPaginationProtoP\x01Z:github.com/origadmin/runtime/api/gen/go/common/v1;commonv1\xa2\x02\x03CXX\xaa\x02\tCommon.V1\xca\x02\tCommon\\V1\xe2\x02\x15Common\\V1\\GPBMetadata\xea\x02\n" +
	"Common::V1b\x06proto3"

var (
	file_common_v1_pagination_proto_rawDescOnce sync.Once
	file_common_v1_pagination_proto_rawDescData []byte
)

func file_common_v1_pagination_proto_rawDescGZIP() []byte {
	file_common_v1_pagination_proto_rawDescOnce.Do(func() {
		file_common_v1_pagination_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_v1_pagination_proto_rawDesc), len(file_common_v1_pagination_proto_rawDesc)))
	})
	return file_common_v1_pagination_proto_rawDescData
}

var file_common_v1_pagination_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_common_v1_pagination_proto_goTypes = []any{
	(*PaginationRequest)(nil), // 0: common.v1.PaginationRequest
	(*Pagination)(nil),        // 1: common.v1.Pagination
}
var file_common_v1_pagination_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_common_v1_pagination_proto_init() }
func file_common_v1_pagination_proto_init() {
	if File_common_v1_pagination_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_v1_pagination_proto_rawDesc), len(file_common_v1_pagination_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_v1_pagination_proto_goTypes,
		DependencyIndexes: file_common_v1_pagination_proto_depIdxs,
		MessageInfos:      file_common_v1_pagination_proto_msgTypes,
	}.Build()
	File_common_v1_pagination_proto = out.File
	file_common_v1_pagination_proto_goTypes = nil
	file_common_v1_pagination_proto_depIdxs = nil
}
