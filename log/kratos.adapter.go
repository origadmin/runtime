// Code generated by adptool. DO NOT EDIT.
//
// This file is generated from kratos.go.

// Package log contains generated code by adptool.
package log

import (
	"context"
	"io"

	klog "github.com/go-kratos/kratos/v2/log"
)

const (
	LevelDebug = klog.LevelDebug
	LevelError = klog.LevelError
	LevelFatal = klog.LevelFatal
	LevelInfo  = klog.LevelInfo
	LevelKey   = klog.LevelKey
	LevelWarn  = klog.LevelWarn
)

var (
	DefaultCaller     = klog.DefaultCaller
	DefaultLogger     = klog.DefaultLogger
	DefaultMessageKey = klog.DefaultMessageKey
	DefaultTimestamp  = klog.DefaultTimestamp
)

type (
	Filter         = klog.Filter
	FilterOption   = klog.FilterOption
	Helper         = klog.Helper
	Level          = klog.Level
	Logger         = klog.Logger
	Option         = klog.Option
	Valuer         = klog.Valuer
	WriterOptionFn = klog.WriterOptionFn
)

func Caller(depth int) klog.Valuer {
	return klog.Caller(depth)
}

func Context(ctx context.Context) *klog.Helper {
	return klog.Context(ctx)
}

func Debug(a ...any) {
	klog.Debug(a...)
}

func Debugf(format string, a ...any) {
	klog.Debugf(format, a...)
}

func Debugw(keyvals ...any) {
	klog.Debugw(keyvals...)
}

func Error(a ...any) {
	klog.Error(a...)
}

func Errorf(format string, a ...any) {
	klog.Errorf(format, a...)
}

func Errorw(keyvals ...any) {
	klog.Errorw(keyvals...)
}

func Fatal(a ...any) {
	klog.Fatal(a...)
}

func Fatalf(format string, a ...any) {
	klog.Fatalf(format, a...)
}

func Fatalw(keyvals ...any) {
	klog.Fatalw(keyvals...)
}

func FilterFunc(f func(level klog.Level, keyvals ...any) bool) klog.FilterOption {
	return klog.FilterFunc(f)
}

func FilterKey(key ...string) klog.FilterOption {
	return klog.FilterKey(key...)
}

func FilterLevel(level klog.Level) klog.FilterOption {
	return klog.FilterLevel(level)
}

func FilterValue(value ...string) klog.FilterOption {
	return klog.FilterValue(value...)
}

func GetLogger() klog.Logger {
	return klog.GetLogger()
}

func Info(a ...any) {
	klog.Info(a...)
}

func Infof(format string, a ...any) {
	klog.Infof(format, a...)
}

func Infow(keyvals ...any) {
	klog.Infow(keyvals...)
}

func Log(level klog.Level, keyvals ...any) {
	klog.Log(level, keyvals...)
}

func NewFilter(logger klog.Logger, opts ...klog.FilterOption) *klog.Filter {
	return klog.NewFilter(logger, opts...)
}

func NewHelper(logger klog.Logger, opts ...klog.Option) *klog.Helper {
	return klog.NewHelper(logger, opts...)
}

func NewStdLogger(w io.Writer) klog.Logger {
	return klog.NewStdLogger(w)
}

func NewWriter(logger klog.Logger, opts ...klog.WriterOptionFn) io.Writer {
	return klog.NewWriter(logger, opts...)
}

func ParseLevel(s string) klog.Level {
	return klog.ParseLevel(s)
}

func SetLogger(logger klog.Logger) {
	klog.SetLogger(logger)
}

func Timestamp(layout string) klog.Valuer {
	return klog.Timestamp(layout)
}

func Value(ctx context.Context, v any) any {
	return klog.Value(ctx, v)
}

func Warn(a ...any) {
	klog.Warn(a...)
}

func Warnf(format string, a ...any) {
	klog.Warnf(format, a...)
}

func Warnw(keyvals ...any) {
	klog.Warnw(keyvals...)
}

func With(l klog.Logger, kv ...any) klog.Logger {
	return klog.With(l, kv...)
}

func WithContext(ctx context.Context, l klog.Logger) klog.Logger {
	return klog.WithContext(ctx, l)
}

func WithMessageKey(k string) klog.Option {
	return klog.WithMessageKey(k)
}

func WithSprint(sprint func(...any) string) klog.Option {
	return klog.WithSprint(sprint)
}

func WithSprintf(sprintf func(format string, a ...any) string) klog.Option {
	return klog.WithSprintf(sprintf)
}

func WithWriteMessageKey(key string) klog.WriterOptionFn {
	return klog.WithWriteMessageKey(key)
}

func WithWriterLevel(level klog.Level) klog.WriterOptionFn {
	return klog.WithWriterLevel(level)
}
