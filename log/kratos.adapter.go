// Code generated by adptool. DO NOT EDIT.
//
// This file is generated from kratos.go.

// Package log contains generated code by adptool.
package log

import (
	"context"
	"io"

	klog "github.com/go-kratos/kratos/v2/log"
)

const (
	LevelDebug = klog.LevelDebug
	LevelError = klog.LevelError
	LevelFatal = klog.LevelFatal
	LevelInfo  = klog.LevelInfo
	LevelKey   = klog.LevelKey
	LevelWarn  = klog.LevelWarn
)

var (
	DefaultCaller     = klog.DefaultCaller
	DefaultLogger     = klog.DefaultLogger
	DefaultMessageKey = klog.DefaultMessageKey
	DefaultTimestamp  = klog.DefaultTimestamp
)

type (
	KFilter         = klog.Filter
	KFilterOption   = klog.FilterOption
	KHelper         = klog.Helper
	KLevel          = klog.Level
	KLogger         = klog.Logger
	KOption         = klog.Option
	KValuer         = klog.Valuer
	KWriterOptionFn = klog.WriterOptionFn
)

func KCaller(depth int) klog.Valuer {
	return klog.Caller(depth)
}

func KContext(ctx context.Context) *klog.Helper {
	return klog.Context(ctx)
}

func KDebug(a ...any) {
	klog.Debug(a...)
}

func KDebugf(format string, a ...any) {
	klog.Debugf(format, a...)
}

func KDebugw(keyvals ...any) {
	klog.Debugw(keyvals...)
}

func KError(a ...any) {
	klog.Error(a...)
}

func KErrorf(format string, a ...any) {
	klog.Errorf(format, a...)
}

func KErrorw(keyvals ...any) {
	klog.Errorw(keyvals...)
}

func KFatal(a ...any) {
	klog.Fatal(a...)
}

func KFatalf(format string, a ...any) {
	klog.Fatalf(format, a...)
}

func KFatalw(keyvals ...any) {
	klog.Fatalw(keyvals...)
}

func KFilterFunc(f func(level klog.Level, keyvals ...any) bool) klog.FilterOption {
	return klog.FilterFunc(f)
}

func KFilterKey(key ...string) klog.FilterOption {
	return klog.FilterKey(key...)
}

func KFilterLevel(level klog.Level) klog.FilterOption {
	return klog.FilterLevel(level)
}

func KFilterValue(value ...string) klog.FilterOption {
	return klog.FilterValue(value...)
}

func KGetLogger() klog.Logger {
	return klog.GetLogger()
}

func KInfo(a ...any) {
	klog.Info(a...)
}

func KInfof(format string, a ...any) {
	klog.Infof(format, a...)
}

func KInfow(keyvals ...any) {
	klog.Infow(keyvals...)
}

func KLog(level klog.Level, keyvals ...any) {
	klog.Log(level, keyvals...)
}

func KNewFilter(logger klog.Logger, opts ...klog.FilterOption) *klog.Filter {
	return klog.NewFilter(logger, opts...)
}

func KNewHelper(logger klog.Logger, opts ...klog.Option) *klog.Helper {
	return klog.NewHelper(logger, opts...)
}

func KNewStdLogger(w io.Writer) klog.Logger {
	return klog.NewStdLogger(w)
}

func KNewWriter(logger klog.Logger, opts ...klog.WriterOptionFn) io.Writer {
	return klog.NewWriter(logger, opts...)
}

func KParseLevel(s string) klog.Level {
	return klog.ParseLevel(s)
}

func KSetLogger(logger klog.Logger) {
	klog.SetLogger(logger)
}

func KTimestamp(layout string) klog.Valuer {
	return klog.Timestamp(layout)
}

func KValue(ctx context.Context, v any) any {
	return klog.Value(ctx, v)
}

func KWarn(a ...any) {
	klog.Warn(a...)
}

func KWarnf(format string, a ...any) {
	klog.Warnf(format, a...)
}

func KWarnw(keyvals ...any) {
	klog.Warnw(keyvals...)
}

func KWith(l klog.Logger, kv ...any) klog.Logger {
	return klog.With(l, kv...)
}

func KWithContext(ctx context.Context, l klog.Logger) klog.Logger {
	return klog.WithContext(ctx, l)
}

func KWithMessageKey(k string) klog.Option {
	return klog.WithMessageKey(k)
}

func KWithSprint(sprint func(...any) string) klog.Option {
	return klog.WithSprint(sprint)
}

func KWithSprintf(sprintf func(format string, a ...any) string) klog.Option {
	return klog.WithSprintf(sprintf)
}

func KWithWriteMessageKey(key string) klog.WriterOptionFn {
	return klog.WithWriteMessageKey(key)
}

func KWithWriterLevel(level klog.Level) klog.WriterOptionFn {
	return klog.WithWriterLevel(level)
}
