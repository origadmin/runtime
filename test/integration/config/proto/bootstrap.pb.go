// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// source: bootstrap.proto

package configs

import (
	v1 "github.com/origadmin/runtime/api/gen/go/discovery/v1"
	v11 "github.com/origadmin/runtime/api/gen/go/transport/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DiscoveryConfig binds a service discovery configuration with a unique name.
type DiscoveryConfig struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique name for this discovery configuration, e.g., "internal-consul", "legacy-etcd"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Specific service discovery configuration
	Config        *v1.Discovery `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiscoveryConfig) Reset() {
	*x = DiscoveryConfig{}
	mi := &file_bootstrap_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoveryConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveryConfig) ProtoMessage() {}

func (x *DiscoveryConfig) ProtoReflect() protoreflect.Message {
	mi := &file_bootstrap_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveryConfig.ProtoReflect.Descriptor instead.
func (*DiscoveryConfig) Descriptor() ([]byte, []int) {
	return file_bootstrap_proto_rawDescGZIP(), []int{0}
}

func (x *DiscoveryConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DiscoveryConfig) GetConfig() *v1.Discovery {
	if x != nil {
		return x.Config
	}
	return nil
}

// Bootstrap is the top-level configuration structure for our test application.
type Bootstrap struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 1. Define a "pool" of service discovery configurations.
	Discoveries []*DiscoveryConfig `protobuf:"bytes,1,rep,name=discoveries,proto3" json:"discoveries,omitempty"`
	// 2. Specify which configuration the current service should use to **register itself**.
	RegistrationDiscoveryName string `protobuf:"bytes,2,opt,name=registration_discovery_name,json=registrationDiscoveryName,proto3" json:"registration_discovery_name,omitempty"`
	// 3. Define the list of service endpoints that the current service will expose.
	GrpcServers []*v11.GRPCServer `protobuf:"bytes,3,rep,name=grpc_servers,json=grpcServers,proto3" json:"grpc_servers,omitempty"`
	HttpServers []*v11.HTTPServer `protobuf:"bytes,4,rep,name=http_servers,json=httpServers,proto3" json:"http_servers,omitempty"`
	// 4. Define the list of downstream clients that the current service will connect to.
	Clients       []*v1.Client `protobuf:"bytes,5,rep,name=clients,proto3" json:"clients,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Bootstrap) Reset() {
	*x = Bootstrap{}
	mi := &file_bootstrap_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bootstrap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bootstrap) ProtoMessage() {}

func (x *Bootstrap) ProtoReflect() protoreflect.Message {
	mi := &file_bootstrap_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bootstrap.ProtoReflect.Descriptor instead.
func (*Bootstrap) Descriptor() ([]byte, []int) {
	return file_bootstrap_proto_rawDescGZIP(), []int{1}
}

func (x *Bootstrap) GetDiscoveries() []*DiscoveryConfig {
	if x != nil {
		return x.Discoveries
	}
	return nil
}

func (x *Bootstrap) GetRegistrationDiscoveryName() string {
	if x != nil {
		return x.RegistrationDiscoveryName
	}
	return ""
}

func (x *Bootstrap) GetGrpcServers() []*v11.GRPCServer {
	if x != nil {
		return x.GrpcServers
	}
	return nil
}

func (x *Bootstrap) GetHttpServers() []*v11.HTTPServer {
	if x != nil {
		return x.HttpServers
	}
	return nil
}

func (x *Bootstrap) GetClients() []*v1.Client {
	if x != nil {
		return x.Clients
	}
	return nil
}

var File_bootstrap_proto protoreflect.FileDescriptor

const file_bootstrap_proto_rawDesc = "" +
	"\n" +
	"\x0fbootstrap.proto\x12\ftest.configs\x1a\x19discovery/v1/client.proto\x1a\x1cdiscovery/v1/discovery.proto\x1a\x17transport/v1/grpc.proto\x1a\x17transport/v1/http.proto\"V\n" +
	"\x0fDiscoveryConfig\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12/\n" +
	"\x06config\x18\x02 \x01(\v2\x17.discovery.v1.DiscoveryR\x06config\"\xb6\x02\n" +
	"\tBootstrap\x12?\n" +
	"\vdiscoveries\x18\x01 \x03(\v2\x1d.test.configs.DiscoveryConfigR\vdiscoveries\x12>\n" +
	"\x1bregistration_discovery_name\x18\x02 \x01(\tR\x19registrationDiscoveryName\x12;\n" +
	"\fgrpc_servers\x18\x03 \x03(\v2\x18.transport.v1.GRPCServerR\vgrpcServers\x12;\n" +
	"\fhttp_servers\x18\x04 \x03(\v2\x18.transport.v1.HTTPServerR\vhttpServers\x12.\n" +
	"\aclients\x18\x05 \x03(\v2\x14.discovery.v1.ClientR\aclientsBDZBgithub.com/origadmin/runtime/test/integration/config/proto;configsb\x06proto3"

var (
	file_bootstrap_proto_rawDescOnce sync.Once
	file_bootstrap_proto_rawDescData []byte
)

func file_bootstrap_proto_rawDescGZIP() []byte {
	file_bootstrap_proto_rawDescOnce.Do(func() {
		file_bootstrap_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_bootstrap_proto_rawDesc), len(file_bootstrap_proto_rawDesc)))
	})
	return file_bootstrap_proto_rawDescData
}

var file_bootstrap_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_bootstrap_proto_goTypes = []any{
	(*DiscoveryConfig)(nil), // 0: test.configs.DiscoveryConfig
	(*Bootstrap)(nil),       // 1: test.configs.Bootstrap
	(*v1.Discovery)(nil),    // 2: discovery.v1.Discovery
	(*v11.GRPCServer)(nil),  // 3: transport.v1.GRPCServer
	(*v11.HTTPServer)(nil),  // 4: transport.v1.HTTPServer
	(*v1.Client)(nil),       // 5: discovery.v1.Client
}
var file_bootstrap_proto_depIdxs = []int32{
	2, // 0: test.configs.DiscoveryConfig.config:type_name -> discovery.v1.Discovery
	0, // 1: test.configs.Bootstrap.discoveries:type_name -> test.configs.DiscoveryConfig
	3, // 2: test.configs.Bootstrap.grpc_servers:type_name -> transport.v1.GRPCServer
	4, // 3: test.configs.Bootstrap.http_servers:type_name -> transport.v1.HTTPServer
	5, // 4: test.configs.Bootstrap.clients:type_name -> discovery.v1.Client
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_bootstrap_proto_init() }
func file_bootstrap_proto_init() {
	if File_bootstrap_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_bootstrap_proto_rawDesc), len(file_bootstrap_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bootstrap_proto_goTypes,
		DependencyIndexes: file_bootstrap_proto_depIdxs,
		MessageInfos:      file_bootstrap_proto_msgTypes,
	}.Build()
	File_bootstrap_proto = out.File
	file_bootstrap_proto_goTypes = nil
	file_bootstrap_proto_depIdxs = nil
}
